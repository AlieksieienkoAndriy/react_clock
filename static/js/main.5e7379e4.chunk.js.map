{"version":3,"sources":["components/Clock/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","timerId","this","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","Math","round","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,kEAOuB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAZP,yCAeqBC,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DP,KAAKQ,MAAMD,SAlBhF,6CAuBIE,cAAcT,KAAKD,WAvBvB,+BA0BY,IACAF,EAASG,KAAKJ,MAAdC,KAER,OACE,oCACE,8BAAOA,EAAKQ,sBACX,IACD,kCAjCR,GAA2BK,IAAMC,WCsDlBC,G,kNApDbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,W,uDAGnB,IAAD,SAC+BjB,KAAKJ,MAAnCiB,EADD,EACCA,eAAgBC,EADjB,EACiBA,UAqBxB,OACE,yBAAKI,UAAU,OACb,2CACA,2CAEG,IACAL,GAAkB,kBAAC,EAAD,CAAON,KAAMO,KAGlC,4BAAQK,KAAK,SAASC,QA5BR,WAChB,EAAKlB,SAAS,CACZW,gBAAgB,MA0BhB,cAIA,4BAAQM,KAAK,SAASC,QA1BR,WAChB,EAAKlB,SAAS,CACZW,gBAAgB,IAElBJ,kBAsBE,cAIA,4BAAQU,KAAK,SAASC,QAvBL,WACnB,EAAKlB,SAAS,CACZY,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,cAqB3B,wB,GA7CUP,IAAMC,YCAxBU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5e7379e4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <>\n        <span>{date.toLocaleTimeString()}</span>\n        {' '}\n        <br />\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: Math.round(Math.random() * 100),\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    const showClock = () => {\n      this.setState({\n        isClockVisible: true,\n      });\n    };\n\n    const hideClock = () => {\n      this.setState({\n        isClockVisible: false,\n      });\n      clearInterval();\n    };\n\n    const ramdomNumber = () => {\n      this.setState({\n        clockName: Math.round(Math.random() * 100),\n      });\n    };\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible && <Clock name={clockName} />}\n        </p>\n\n        <button type=\"button\" onClick={showClock}>\n          Show Clock\n        </button>\n\n        <button type=\"button\" onClick={hideClock}>\n          Hide Clock\n        </button>\n\n        <button type=\"button\" onClick={ramdomNumber}>\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}